/* Generated by Opal 0.9.0.dev */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;

  Opal.add_stubs(['$push', '$native_type']);
  return (function($base) {
    var self = $module($base, 'VRbJS');

    var def = self.$$proto, $scope = self.$$scope;

    (function($base) {
      var self = $module($base, 'SoDump');

      var def = self.$$proto, $scope = self.$$scope, TMP_1;

      (function(self) {
        var $scope = self.$$scope, def = self.$$proto;

        return (self.$$proto.$native_type = function() {
          var self = this;

          return VRbJS.SoDump;
        }, nil) && 'native_type'
      })(self.$singleton_class());

      Opal.defs(self, '$dump', TMP_1 = function() {
        var self = this, $iter = TMP_1.$$p, b = $iter || nil;

        var o = $slice.call(arguments, 0);
        TMP_1.$$p = null;
        if (b !== false && b !== nil) {
          o.$push(b)};
        return self.$native_type()['dump'].apply(self.$native_type(), o);
      });
    })(self)
  })(self)
})(Opal);
