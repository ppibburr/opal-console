/* Generated by Opal 0.8.0.rc2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;

  Opal.add_stubs(['$push']);
  return (function($base) {
    var self = $module($base, 'VRbJS');

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4;

    self.native_type = VRbJS;

    Opal.defs(self, '$main_quit', TMP_1 = function(o) {
      var self = this, $iter = TMP_1.$$p, b = $iter || nil;
      if (self.native_type == null) self.native_type = nil;

      o = $slice.call(arguments, 0);
      TMP_1.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self.native_type['main_quit'].apply(self.native_type, o);
    });

    Opal.defs(self, '$require', TMP_2 = function(o) {
      var self = this, $iter = TMP_2.$$p, b = $iter || nil;
      if (self.native_type == null) self.native_type = nil;

      o = $slice.call(arguments, 0);
      TMP_2.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self.native_type['require'].apply(self.native_type, o);
    });

    Opal.defs(self, '$exit', TMP_3 = function(o) {
      var self = this, $iter = TMP_3.$$p, b = $iter || nil;
      if (self.native_type == null) self.native_type = nil;

      o = $slice.call(arguments, 0);
      TMP_3.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self.native_type['exit'].apply(self.native_type, o);
    });

    Opal.defs(self, '$set_debug', TMP_4 = function(o) {
      var self = this, $iter = TMP_4.$$p, b = $iter || nil;
      if (self.native_type == null) self.native_type = nil;

      o = $slice.call(arguments, 0);
      TMP_4.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self.native_type['set_debug'].apply(self.native_type, o);
    });
  })(self)
})(Opal);
