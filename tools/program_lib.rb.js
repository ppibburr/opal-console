/* Generated by Opal 0.8.0.rc2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$push', '$Interface']);
  return (function($base, $super) {
    function $Program(){};
    var self = $Program = $klass($base, $super, 'Program', $Program);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5;

    def._native = nil;
    def.$run = TMP_1 = function(o) {
      var self = this, $iter = TMP_1.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_1.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['run'].apply(self._native, o);
    };

    def.$append_argv = TMP_2 = function(o) {
      var self = this, $iter = TMP_2.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_2.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['append_argv'].apply(self._native, o);
    };

    def.$write = TMP_3 = function(o) {
      var self = this, $iter = TMP_3.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_3.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['write'].apply(self._native, o);
    };

    def.$read = TMP_4 = function(o) {
      var self = this, $iter = TMP_4.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_4.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['read'].apply(self._native, o);
    };

    return (def.$dump = TMP_5 = function(o) {
      var self = this, $iter = TMP_5.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_5.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['dump'].apply(self._native, o);
    }, nil) && 'dump';
  })(self, $scope.get('VRbJS').$Interface(Program))
})(Opal);
