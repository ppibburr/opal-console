/* Generated by Opal 0.8.0.rc2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$push', '$native_type', '$Interface']);
  return (function($base, $super) {
    function $File(){};
    var self = $File = $klass($base, $super, 'File', $File);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2;

    def._native = nil;
    Opal.defs(self, '$read', TMP_1 = function(o) {
      var self = this, $iter = TMP_1.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_1.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self.$native_type()['read'].apply(self.$native_type(), o);
    });

    return (def.$each = TMP_2 = function(o) {
      var self = this, $iter = TMP_2.$$p, b = $iter || nil;

      o = $slice.call(arguments, 0);
      TMP_2.$$p = null;
      if (b !== false && b !== nil) {
        o.$push(b)};
      return self._native['each'].apply(self._native, o);
    }, nil) && 'each';
  })(self, $scope.get('Opala').$Interface(File))
})(Opal);
