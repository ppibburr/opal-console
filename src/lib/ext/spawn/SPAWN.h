/* SPAWN.h generated by valac 0.28.0, the Vala compiler, do not modify */


#ifndef __SPAWN_H__
#define __SPAWN_H__

#include <glib.h>
#include <vrbjs.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>
#include <JavaScriptCore/JavaScript.h>

G_BEGIN_DECLS


#define SPAWN_TYPE_SPAWN_BINDER (spawn_spawn_binder_get_type ())
#define SPAWN_SPAWN_BINDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SPAWN_TYPE_SPAWN_BINDER, SpawnSpawnBinder))
#define SPAWN_SPAWN_BINDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SPAWN_TYPE_SPAWN_BINDER, SpawnSpawnBinderClass))
#define SPAWN_IS_SPAWN_BINDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SPAWN_TYPE_SPAWN_BINDER))
#define SPAWN_IS_SPAWN_BINDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SPAWN_TYPE_SPAWN_BINDER))
#define SPAWN_SPAWN_BINDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SPAWN_TYPE_SPAWN_BINDER, SpawnSpawnBinderClass))

typedef struct _SpawnSpawnBinder SpawnSpawnBinder;
typedef struct _SpawnSpawnBinderClass SpawnSpawnBinderClass;
typedef struct _SpawnSpawnBinderPrivate SpawnSpawnBinderPrivate;

struct _SpawnSpawnBinder {
	VRbJSJSUtilsBinder parent_instance;
	SpawnSpawnBinderPrivate * priv;
};

struct _SpawnSpawnBinderClass {
	VRbJSJSUtilsBinderClass parent_class;
};


GType spawn_spawn_binder_get_type (void) G_GNUC_CONST;
SpawnSpawnBinder* spawn_spawn_binder_new (void);
SpawnSpawnBinder* spawn_spawn_binder_construct (GType object_type);
GSpawnFlags spawn_get_spawn_flags (GeeHashMap* options, gchar*** spawn_args, int* spawn_args_length1);
gboolean spawn_system_shell (const gchar* cmd_line, gint* status, GeeHashMap* options, gchar** spawn_env, int spawn_env_length1);
gboolean spawn_system_cmd (gchar** argv, int argv_length1, gint* status, gboolean file_argv0, GeeHashMap* options, gchar** spawn_env, int spawn_env_length1);
gboolean spawn_hash2map (const struct OpaqueJSContext* c, struct OpaqueJSValue* hash, gchar*** keys, int* keys_length1, GValue*** values, int* values_length1);
VRbJSRuntimeLibInfo* spawn_init (VRbJSRuntime* r);


G_END_DECLS

#endif
